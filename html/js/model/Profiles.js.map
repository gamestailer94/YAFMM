{"version":3,"sources":["js/model/Profiles.js"],"names":["Profiles","activeProfile","profiles","map","profile","id","lastProfileId","addProfile","push","loadProfiles","Promise","resolve","reject","window","storage","isPathExists","exists","get","err","data","logger","error","console","log","mods","profileObject","hydrate"],"mappings":"AAAA;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGMA,Q,aAAN,MAAMA,QAAN,CAAe;AAAA;AAAA;;AAAA;AAAA;;AAID,QAAIC,aAAJ,GAAmB;AACzB,eAAO,KAAKC,QAAL,CAAcC,GAAd,CAAkBC,WAAW;AAChC,gBAAGA,QAAQC,EAAR,KAAe,KAAKC,aAAvB,EAAqC;AACjC,uBAAOF,OAAP;AACH;AACJ,SAJM,EAIJ,CAJI,CAAP;AAKH;;AAEOG,eAAWH,OAAX,EAAmB;AACvB,aAAKF,QAAL,CAAcM,IAAd,CAAmBJ,OAAnB;AACH;;AAEOK,mBAAe;AACnB,eAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACnCC,mBAAOC,OAAP,CAAeC,YAAf,CAA4B,eAA5B,EAA8CC,MAAD,IAAY;AACrD,oBAAGA,MAAH,EAAW;AACPH,2BAAOC,OAAP,CAAeG,GAAf,CAAmB,UAAnB,EAA+B,CAACC,GAAD,EAAKC,IAAL,KAAa;AACxC,4BAAGD,GAAH,EAAO;AACHL,mCAAOO,MAAP,CAAcC,KAAd,CAAoBH,GAApB;AACAN;AACH;AACD,6BAAKV,QAAL,GAAgB,EAAhB;AACAiB,6BAAKjB,QAAL,CAAcC,GAAd,CAAkBC,WAAW;AACzBkB,oCAAQC,GAAR,CAAYnB,QAAQoB,IAApB;AACA,gCAAIC,gBAAgB,uBAApB;AACAA,0CAAcC,OAAd,CAAsBtB,OAAtB;AACA,iCAAKF,QAAL,CAAcM,IAAd,CAAmBiB,aAAnB;AACH,yBALD;AAMA,6BAAKnB,aAAL,GAAqBa,KAAKb,aAA1B;AACAK;AACH,qBAdD;AAeH,iBAhBD,MAgBM;AACFA;AACH;AACJ,aApBD;AAqBH,SAtBM,CAAP;AAuBH;;AAxCU,C;;;eACY,CAAC,uBAAD,C;;;;;eACK,C;;;kBA2CjBX,Q","file":"Profiles.js","sourcesContent":["'use strict';\r\nimport { action, observable, autorun, computed } from 'mobx'\r\nimport Profile from './profile'\r\n\r\n\r\nclass Profiles {\r\n    @observable profiles = [new Profile()];\r\n    @observable lastProfileId = 0;\r\n\r\n    @computed get activeProfile(){\r\n        return this.profiles.map(profile => {\r\n            if(profile.id === this.lastProfileId){\r\n                return profile;\r\n            }\r\n        })[0];\r\n    }\r\n\r\n    @action addProfile(profile){\r\n        this.profiles.push(profile);\r\n    }\r\n\r\n    @action loadProfiles() {\r\n        return new Promise((resolve,reject) => {\r\n            window.storage.isPathExists('profiles.json', (exists) => {\r\n                if(exists) {\r\n                    window.storage.get('profiles', (err,data) =>{\r\n                        if(err){\r\n                            window.logger.error(err);\r\n                            reject();\r\n                        }\r\n                        this.profiles = [];\r\n                        data.profiles.map(profile => {\r\n                            console.log(profile.mods);\r\n                            let profileObject = new Profile();\r\n                            profileObject.hydrate(profile);\r\n                            this.profiles.push(profileObject);\r\n                        });\r\n                        this.lastProfileId = data.lastProfileId;\r\n                        resolve();\r\n                    })\r\n                }else {\r\n                    resolve();\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Profiles"]}