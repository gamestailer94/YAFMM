{"version":3,"sources":["js/component/DropboxOAuth.js"],"names":["DropboxOAuth","Component","componentDidMount","props","state","displayMenu","port","dropbox","clientId","config","DropboxClientId","durl","getAuthenticationUrl","send","server","createServer","listen","onRequest","request","response","url","end","close","queryData","parse","query","error","window","logger","pageBack","DropboxAccessToken","access_token","on","prevPage","page","render"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;IAGMA,Y,WADL,uBAAO,QAAP,C,UAAkB,uBAAO,OAAP,C,+BACnB,MAAMA,YAAN,SAA2B,gBAAMC,SAAjC,CAA2C;;AAEvCC,wBAAmB;AACf,aAAKC,KAAL,CAAWC,KAAX,CAAiBC,WAAjB,GAA+B,KAA/B;AACA,YAAIC,OAAO,IAAX;;AAEA,YAAIC,UAAU,sBAAY,EAACC,UAAU,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,eAA7B,EAAZ,CAAd;AACA,YAAIC,OAAOJ,QAAQK,oBAAR,CAA6B,sBAAoBN,IAAjD,CAAX;AACA,8BAAYO,IAAZ,CAAiB,gBAAjB,EAAkCF,IAAlC;;AAEA,YAAIG,SAAS,eAAKC,YAAL,EAAb;AACAD,eAAOE,MAAP,CAAcV,IAAd;;AAEA,YAAIW,YAAY,CAACC,OAAD,EAASC,QAAT,KAAoB;AAChC,gBAAGD,QAAQE,GAAR,KAAgB,GAAnB,EAAwB;AACpBD,yBAASE,GAAT,CAAa,uDACT,4FADS,GAET,yBAFJ;AAGH,aAJD,MAIM;AACFF,yBAASE,GAAT,CAAa,4DAAb;AACAP,uBAAOQ,KAAP;;AAEA,oBAAIC,YAAY,cAAIC,KAAJ,CAAUN,QAAQE,GAAlB,EAAuB,IAAvB,CAAhB;AACA,oBAAIG,UAAUE,KAAV,CAAgBC,KAApB,EAA2B;AACvBC,2BAAOC,MAAP,CAAcF,KAAd,CAAoBH,UAAUE,KAAV,CAAgBC,KAApC;AACA,yBAAKG,QAAL;AACH,iBAHD,MAGO;AACH,yBAAK1B,KAAL,CAAWM,MAAX,CAAkBqB,kBAAlB,GAAuCP,UAAUE,KAAV,CAAgBM,YAAvD;AACA,yBAAKF,QAAL;AACH;AACJ;AACJ,SAlBD;;AAoBAf,eAAOkB,EAAP,CAAU,SAAV,EAAoBf,SAApB;AACH;;AAEDY,eAAU;AACN,aAAK1B,KAAL,CAAWC,KAAX,CAAiBC,WAAjB,GAA+B,IAA/B;AACA,YAAI4B,WAAW,KAAK9B,KAAL,CAAWC,KAAX,CAAiB6B,QAAhC;AACA,aAAK9B,KAAL,CAAWC,KAAX,CAAiB6B,QAAjB,GAA4B,EAA5B;AACA,aAAK9B,KAAL,CAAWC,KAAX,CAAiB8B,IAAjB,GAAwBD,QAAxB;AACH;;AAEDE,aAAQ;AACJ,eAAO;AAAA;AAAA,cAAK,WAAU,KAAf;AACH;AAAA;AAAA,kBAAK,WAAU,KAAf;AACI;AAAA;AAAA,sBAAI,WAAU,aAAd;AAAA;AAAA;AADJ;AADG,SAAP;AAKH;AAjDsC,C;kBAoD5BnC,Y","file":"DropboxOAuth.js","sourcesContent":["import React from 'react';\nimport {ipcRenderer} from 'electron';\nimport {inject} from 'mobx-react';\nimport http from 'http';\nimport url from 'url';\nimport Dropbox from 'dropbox';\n\n@inject('config') @inject('state')\nclass DropboxOAuth extends React.Component {\n\n    componentDidMount(){\n        this.props.state.displayMenu = false;\n        let port = 8088;\n\n        let dropbox = new Dropbox({clientId: this.props.config.DropboxClientId});\n        let durl = dropbox.getAuthenticationUrl('http://localhost:'+port);\n        ipcRenderer.send('openOAuthPanel',durl);\n\n        let server = http.createServer();\n        server.listen(port);\n\n        let onRequest = (request,response)=>{\n            if(request.url === '/') {\n                response.end('<html><head><script type=\"application/javascript\">' +\n                    'window.location = \"http://\"+window.location.host+\"/\"+window.location.hash.replace(\"#\",\"?\")' +\n                    '</script></head></html>');\n            }else {\n                response.end('<html><head><script>window.close();</script></head></html>');\n                server.close();\n\n                let queryData = url.parse(request.url, true);\n                if (queryData.query.error) {\n                    window.logger.error(queryData.query.error);\n                    this.pageBack();\n                } else {\n                    this.props.config.DropboxAccessToken = queryData.query.access_token;\n                    this.pageBack();\n                }\n            }\n        };\n\n        server.on('request',onRequest);\n    }\n\n    pageBack(){\n        this.props.state.displayMenu = true;\n        let prevPage = this.props.state.prevPage;\n        this.props.state.prevPage = '';\n        this.props.state.page = prevPage;\n    }\n\n    render(){\n        return <div className=\"row\">\n            <div className=\"col\">\n                <h1 className=\"text-center\">Waiting for Dropbox Login</h1>\n            </div>\n        </div>\n    }\n}\n\nexport default DropboxOAuth"]}